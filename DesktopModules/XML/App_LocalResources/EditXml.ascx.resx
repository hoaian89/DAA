<?xml version="1.0" encoding="UTF-8" ?>
<root>
	<xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
		<xsd:element name="root" msdata:IsDataSet="true">
			<xsd:complexType>
				<xsd:choice maxOccurs="unbounded">
					<xsd:element name="data">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
								<xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" />
							<xsd:attribute name="type" type="xsd:string" />
							<xsd:attribute name="mimetype" type="xsd:string" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="resheader">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" use="required" />
						</xsd:complexType>
					</xsd:element>
				</xsd:choice>
			</xsd:complexType>
		</xsd:element>
	</xsd:schema>
	<resheader name="ResMimeType">
		<value>text/microsoft-resx</value>
	</resheader>
	<resheader name="Version">
		<value>1.0.0.0</value>
	</resheader>
	<resheader name="Reader">
		<value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=1.0.3300.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<resheader name="Writer">
		<value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=1.0.3300.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<data name="dshXslTrans.Text">
		<value>XSL Transformation Settings</value>
	</data>
	<data name="dshXmlSource.Text">
		<value>XML Data Source Settings</value>
	</data>
	<data name="ModuleHelp.Text">
		<value>&lt;h1&gt;About the XML/XSL Module&lt;/h1&gt;
		&lt;p&gt;The XML/XSL Module renders the result of an XML/XSL transform.&amp;nbsp;&lt;/p&gt;
		&lt;p&gt;XML module is working in three steps;&lt;/p&gt;
		&lt;ol&gt;
			&lt;li&gt;
				it queries &lt;a href="http://en.wikipedia.org/wiki/XML"&gt;XML&lt;/a&gt;
			Data,
			&lt;li&gt;
				transforms the XML data using an &lt;a href="http://en.wikipedia.org/wiki/XSLT"&gt;XSL 
					transformation&lt;/a&gt;,
			&lt;li&gt;
				and returns the result back to the user.
				&lt;br&gt;
			&lt;li&gt;
				All settings are stored inside DotNetNuke.
			&lt;/li&gt;
		&lt;/ol&gt;
		&lt;h1&gt;Edit XML/XSL
		&lt;/h1&gt;
		&lt;ol&gt;
			&lt;li&gt;
				Xml Source&lt;br&gt;
				Either an Xml File stored inside your portal or on an external webserver. The 
				querystring for the external url can be built on runtime using DotNetNuke 
				properties, User profile settings or Querystring/Form pass through values. You 
				can setup credentials for the http request.&lt;/li&gt;
			&lt;li&gt;
				XSL Script&lt;br&gt;
				Either an&amp;nbsp;XSL File stored inside your portal or on an external webserver.
				&lt;br&gt;
				You can define XSL arguments based on DotNetNuke properties, User profile 
				settings or Querystring/Form pass through values.&lt;/li&gt;
			&lt;li&gt;
				Advanced Settings&lt;br&gt;
				The result of the transformation is returned inside the DotNetNuke page by 
				default. You can change this to support downloads.&lt;br&gt;
				If the result of the transformation doesnot depend on dynamic parameters you 
				can allow the module to be included in DotNetNuke search.&lt;/li&gt;&lt;/ol&gt;</value>
	</data>
	<data name="lblSecurityTitle.Text">
		<value>Security Options (optional)</value>
	</data>
	<data name="lblSecurity.Text">
		<value>Account Information</value>
	</data>
	<data name="lblDomain.Text">
		<value>Domain\username</value>
	</data>
	<data name="lblPassword.Text">
		<value>Password</value>
	</data>
	<data name="dshAdvancedTitle.Text">
		<value>Advanced Options</value>
	</data>
	<data name="dshUrlParams.Text">
		<value>Querystring Parameters</value>
	</data>
	<data name="dshXslParams.Text">
		<value>XSL Parameters</value>
	</data>
	<data name="StaticValue.Text">
		<value>Static Value</value>
	</data>
	<data name="PassThrough.Text">
		<value>Pass-Through QueryString</value>
	</data>
	<data name="FormPassThrough.Text">
		<value>Pass-Through Form Post</value>
	</data>
	<data name="UserCustomProperty.Text">
		<value>Custom User Property</value>
	</data>
	<data name="PortalID.Text">
		<value>Portal ID</value>
	</data>
	<data name="PortalName.Text">
		<value>Portal Name</value>
	</data>
	<data name="TabID.Text">
		<value>Tab ID</value>
	</data>
	<data name="UserID.Text">
		<value>User ID</value>
	</data>
	<data name="UserUsername.Text">
		<value>User's Username</value>
	</data>
	<data name="UserFirstName.Text">
		<value>User's First Name</value>
	</data>
	<data name="UserLastName.Text">
		<value>User's Last Name</value>
	</data>
	<data name="UserFullName.Text">
		<value>User's Display Name</value>
	</data>
	<data name="UserEmail.Text">
		<value>User's Email</value>
	</data>
	<data name="UserWebsite.Text">
		<value>User's Website</value>
	</data>
	<data name="UserIM.Text">
		<value>User's IM</value>
	</data>
	<data name="UserStreet.Text">
		<value>User's Street</value>
	</data>
	<data name="UserUnit.Text">
		<value>User's Unit</value>
	</data>
	<data name="UserCity.Text">
		<value>User's City</value>
	</data>
	<data name="UserCountry.Text">
		<value>User's Country</value>
	</data>
	<data name="UserRegion.Text">
		<value>User's Region</value>
	</data>
	<data name="UserPostalCode.Text">
		<value>User's Postal Code</value>
	</data>
	<data name="UserPhone.Text">
		<value>User's Phone</value>
	</data>
	<data name="UserCell.Text">
		<value>User's Cell</value>
	</data>
	<data name="UserFax.Text">
		<value>User's Fax</value>
	</data>
	<data name="UserLocale.Text">
		<value>User's Locale</value>
	</data>
	<data name="UserTimeZone.Text">
		<value>User's TimeZone</value>
	</data>
	<data name="UserIsAuthorized.Text">
		<value>User's Authorized Flag</value>
	</data>
	<data name="UserIsLockedOut.Text">
		<value>User's Lock Out Flag</value>
	</data>
	<data name="UserIsSuperUser.Text">
		<value>User's SuperUser Flag</value>
	</data>
	<data name="Save.Text">
		<value>Save</value>
	</data>
	<data name="Cancel.Text">
		<value>Cancel</value>
	</data>
	<data name="Delete.Text">
		<value>Delete</value>
	</data>
	<data name="cmdAddParam.Text">
		<value>Add Parameter</value>
	</data>
	<data name="ParameterInvalid.Header">
		<value>Invalid Parameter</value>
	</data>
	<data name="ParameterInvalid.Text">
		<value>The specified parameter options are invalid. Ensure the &lt;b&gt;Name&lt;/b&gt; and, if required, type argument are both specified.</value>
	</data>
	<data name="DeleteParamConfirmation.Text">
		<value>Are you sure you want to remove this item from the data store? Once removed it cannot be retrieved.</value>
	</data>
	<data name="Name.Header">
		<value>Name</value>
	</data>
	<data name="Value.Header">
		<value>Data Origin </value>
	</data>
	<data name="Type.Header">
		<value>Type</value>
	</data>
	<data name="lblParamArgument.Text">
		<value>Arg:</value>
	</data>
	<data name="ControlTitle_edit.Text">
		<value>XML Module Configuration</value>
	</data>
	<data name="XmlWebPermisssion.ErrorMessage">
		<value>WebRequests to the configured external xml source are not permitted (Medium trust)</value>
	</data>
	<data name="XslWebPermisssion.ErrorMessage">
		<value>WebRequests to the configured external xsl stylesheet are not permitted (Medium trust)</value>
	</data>
	<data name="lblXmlSource.Text">
		<value>In this section, you can define the source of your XML data. It can be provided as a local file or be queried via http using dynamic querystrings.</value>
	</data>
	<data name="lblXslDefinition.Text">
		<value>In this section, you can define the source of your XSL Stylesheet. You can also define additional parameters to provide your script with context information.</value>
	</data>
	<data name="lblOutput.Text">
		<value>By default the XML Module will render the output (as HTML) inside the module. However it is also possible to create downloads. </value>
	</data>
	<data name="plOutput.Text">
		<value>Output</value>
	</data>
	<data name="plOutput.Help">
		<value>You can output the transformation result inside the normal DotNetNuke page or as a separate Download.</value>
	</data>
	<data name="OutputInline.Text">
		<value>inside module</value>
	</data>
	<data name="OutputLink.Text">
		<value>as link to a download</value>
	</data>
	<data name="OutputResponse.Text">
		<value>as download</value>
	</data>
	<data name="plContentType.Text">
		<value>Content Type</value>
	</data>
	<data name="plContentType.Help">
		<value>Define the type of the download. Only used if Output is set to a Download type</value>
	</data>
	<data name="lblSearch.Text">
		<value>The Output of the XML Module is not searchable in DotNetNuke Search by default. However, if you want to allow searching and your setup doesn't depend on dynamic parameters you can switch it on.</value>
	</data>
	<data name="plIndexRun.Text">
		<value>Allow Indexing</value>
	</data>
	<data name="plIndexRun.Help">
		<value>The module must be indexed to appear in DotNetNuke Search result. Searching is switched off by default. Please note that the frequency of the search is defined by the host administrator. You can define here how often this module will get included.</value>
	</data>
	<data name="IndexRunNever.Text">
		<value>never (search is disabled)</value>
	</data>
	<data name="IndexRunNextRun.Text">
		<value>only on next run</value>
	</data>
	<data name="IndexRunAlways.Text">
		<value>always</value>
	</data>
	<data name="IndexRunOncePerHour.Text">
		<value>once per hour</value>
	</data>
	<data name="IndexRunOncePerDay.Text">
		<value>once per day</value>
	</data>
	<data name="lblDynamicParameter.Text">
		<value>Index run is disabled as there are dynamic parameters for either query string or xsl args.</value>
	</data>
	<data name="cmdClearSearchIndex.Text">
		<value>Clear Search Index</value>
	</data>
	<data name="IsValueRequired.Header">
		<value>Required</value>
	</data>
	<data name="Required.Header">
		<value>Required</value>
	</data>
	<data name="lblEnableByQuerystring.Text">
		<value>For some use cases it is nescessary that the module only runs if the request contains a defined querystring parameter/ value pair.</value>
	</data>
	<data name="plEnableParam.Text">
		<value>Querystring param</value>
	</data>
	<data name="plEnableParam.Help">
		<value>If Querystring param and value has been set, the module will only run if this querystring pair is used in the request.</value>
	</data>
	<data name="plEnableValue.Text">
		<value>Querystring value</value>
	</data>
	<data name="plEnableValue.Help">
		<value>If Querystring param and value has been set, the module will only run if this querystring pair is used in the request.&lt;br/&gt; 
If Querystring param is set but &lt;b&gt;value&lt;/b&gt; is missing, the module will be disabled for any usage of a not empty value.</value>
	</data>
	<data name="cmdClearEnableByParam.Text">
		<value>Clear/ Disable</value>
	</data>
	<data name="HomeDirectory.Text">
		<value>Home Directrory</value>
	</data>
	<data name="CurrentCulture.Text">
		<value>Current Culture</value>
	</data>
	<data name="dshQueryStringEncoding.Text">
		<value>Querystring URL Encoding</value>
	</data>
	<data name="plQueryStringEncoding.Text">
		<value>Encoding</value>
	</data>
	<data name="plQueryStringEncoding.Help">
		<value>Some services expect their values in different encodings. Default is UTF8.</value>
	</data>
	<data name="ParameterFallback.Text">
		<value>Fallback</value>
	</data>
</root>